package cliente;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.net.InetAddress;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import rmi.ServerInterface;
import java.rmi.registry.*;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.event.ListSelectionEvent;
import rmi.Result;
import rmi.User;

/// Referencias
/// Dialogo -> https://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html
/// Seletor de ficheiros -> https://www.rgagnon.com/javadetails/java-0370.html
/// Listagem de ficheiros -> https://www.geeksforgeeks.org/list-all-files-from-a-directory-recursively-in-java/




public class App extends javax.swing.JFrame {

    private String ip;
    private String username;
    private File sharedFolder;
    private ServerInterface serverInterface;
    private List<User> users;
    private LogsThread logsThread;
    private boolean loggedIn = false;

    public App() {
        initComponents();

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                // Call your function or logic to decide whether to close
                try {
                    Result result = serverInterface.logout(username);
                    loggedIn = false;
                    logsThread.kill();
                    username = null;
                    sessionButton.setText("Login");
                    selectFolderButton.setEnabled(true);
                    ipField.setEnabled(true);
                    portField.setEnabled(true);
                    usernameField.setEnabled(true);
                } catch (Exception exception) {
                    exception.printStackTrace();
                }
            }
        });

        try {
            String hostname = InetAddress.getLocalHost().getHostName();
            usernameField.setText(hostname);

            clientsList.addListSelectionListener((ListSelectionEvent e) -> {
                if (!e.getValueIsAdjusting()) {
                    JList<String> list = (JList<String>) e.getSource();
                    String selectedUsername = list.getSelectedValue();

                    for (User user : users) {
                        if (user.getUserName().equals(selectedUsername)) {

                            DefaultListModel<String> listModel = new DefaultListModel<>();

                            user.getFiles().forEach(path -> {
                                File file = new File(path);
                                listModel.addElement(file.getName());
                            });

                            filesList.setModel(listModel);

                            break;
                        }
                    }
                }
            });

            filesList.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    System.out.println(e.getClickCount());
                }
            });

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        clientsList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        filesList = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        labelConfiguracoes = new javax.swing.JLabel();
        labelUsername = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        labelServidor = new javax.swing.JLabel();
        ipField = new javax.swing.JTextField();
        labelServidor1 = new javax.swing.JLabel();
        portField = new javax.swing.JTextField();
        labelPartilha = new javax.swing.JLabel();
        labelPasta = new javax.swing.JLabel();
        selectFolderButton = new javax.swing.JButton();
        sessionButton = new javax.swing.JButton();
        labelConfiguracoes1 = new javax.swing.JLabel();
        labelPartilha1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        logsList = new javax.swing.JList<>();
        labelUsername1 = new javax.swing.JLabel();
        labelUsername2 = new javax.swing.JLabel();
        refreshFilesButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cliente");
        setBackground(new java.awt.Color(246, 246, 246));
        setResizable(false);

        clientsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(clientsList);

        jScrollPane2.setViewportView(filesList);

        jPanel1.setBackground(new java.awt.Color(249, 249, 249));
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));

        labelConfiguracoes.setFont(new java.awt.Font("Inter Display", 1, 18)); // NOI18N
        labelConfiguracoes.setText("Configurações");

        labelUsername.setFont(new java.awt.Font("Inter Display", 1, 15)); // NOI18N
        labelUsername.setText("Nome de Utilizador");

        labelServidor.setFont(new java.awt.Font("Inter Display", 1, 15)); // NOI18N
        labelServidor.setText("Endereço Servidor");

        ipField.setText("192.168.18.59");

        labelServidor1.setFont(new java.awt.Font("Inter Display", 1, 15)); // NOI18N
        labelServidor1.setText("Porta");

        portField.setText("1099");
        portField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portFieldActionPerformed(evt);
            }
        });

        labelPartilha.setFont(new java.awt.Font("Inter Display", 1, 18)); // NOI18N
        labelPartilha.setText("Logs");

        labelPasta.setText("Nenhuma pasta selecionada");

        selectFolderButton.setText("Selecionar Pasta");
        selectFolderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFolderButtonActionPerformed(evt);
            }
        });

        sessionButton.setText("Iniciar Sessão");
        sessionButton.setEnabled(false);
        sessionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sessionButtonActionPerformed(evt);
            }
        });

        labelConfiguracoes1.setFont(new java.awt.Font("Inter Display", 1, 18)); // NOI18N
        labelConfiguracoes1.setText("Servidor");

        labelPartilha1.setFont(new java.awt.Font("Inter Display", 1, 18)); // NOI18N
        labelPartilha1.setText("Partilha");

        jScrollPane4.setViewportView(logsList);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameField)
                    .addComponent(sessionButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ipField)
                    .addComponent(selectFolderButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelConfiguracoes)
                            .addComponent(labelUsername)
                            .addComponent(labelServidor)
                            .addComponent(labelServidor1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPartilha)
                            .addComponent(labelPasta)
                            .addComponent(labelConfiguracoes1)
                            .addComponent(labelPartilha1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelConfiguracoes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelUsername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sessionButton)
                .addGap(31, 31, 31)
                .addComponent(labelConfiguracoes1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelServidor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ipField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelServidor1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(portField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(labelPartilha1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelPasta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectFolderButton)
                .addGap(48, 48, 48)
                .addComponent(labelPartilha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        labelUsername1.setFont(new java.awt.Font("Inter Display", 1, 15)); // NOI18N
        labelUsername1.setText("Ficheiros");

        labelUsername2.setFont(new java.awt.Font("Inter Display", 1, 15)); // NOI18N
        labelUsername2.setText("Utilizadores");

        refreshFilesButton.setText("Atualizar Ficheiros");
        refreshFilesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshFilesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelUsername2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelUsername1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(refreshFilesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUsername1)
                    .addComponent(labelUsername2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(refreshFilesButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)))
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectFolderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFolderButtonActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Selecione uma pasta para partilhar");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            sharedFolder = chooser.getSelectedFile();
            labelPasta.setText(sharedFolder.toString());

            sessionButton.setEnabled(true);
        }
    }//GEN-LAST:event_selectFolderButtonActionPerformed

    private void sessionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sessionButtonActionPerformed
        try {

            if (loggedIn == false) {

                ip = ipField.getText();
                username = usernameField.getText();

                Registry registry = LocateRegistry.getRegistry(ip, 1099);
                serverInterface = (ServerInterface) registry.lookup("projeto-sd");

                List<String> files = new ArrayList<>();

                Files.newDirectoryStream(sharedFolder.toPath()).forEach(path -> {
                    if (new File(path.toString()).isFile()) {
                        files.add(path.toString());
                    }
                });

                Result loginResult = serverInterface.login(username, sharedFolder.getAbsolutePath(), files);

                if (!loginResult.getSuccess()) {
                    JOptionPane.showMessageDialog(this,
                            loginResult.getMessage(),
                            "Erro",
                            JOptionPane.ERROR_MESSAGE);

                    return;
                }

                users = serverInterface.getUsers();

                DefaultListModel<String> listModel = new DefaultListModel<>();

                users.forEach(user -> {

                    listModel.addElement(user.getUserName());

                });

                clientsList.setModel(listModel);

                sessionButton.setText("Logout");
                selectFolderButton.setEnabled(false);
                ipField.setEnabled(false);
                portField.setEnabled(false);
                usernameField.setEnabled(false);
                loggedIn = true;

                logsThread = new LogsThread(serverInterface, username, logsList);
                Thread thread = new Thread(logsThread);
                thread.start();

            } else {
                Result result = serverInterface.logout(username);
                loggedIn = false;
                logsThread.kill();
                username = null;
                sessionButton.setText("Login");
                selectFolderButton.setEnabled(true);
                ipField.setEnabled(true);
                portField.setEnabled(true);
                usernameField.setEnabled(true);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_sessionButtonActionPerformed

    private void portFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portFieldActionPerformed

    private void refreshFilesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshFilesButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshFilesButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> clientsList;
    private javax.swing.JList<String> filesList;
    private javax.swing.JTextField ipField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel labelConfiguracoes;
    private javax.swing.JLabel labelConfiguracoes1;
    private javax.swing.JLabel labelPartilha;
    private javax.swing.JLabel labelPartilha1;
    private javax.swing.JLabel labelPasta;
    private javax.swing.JLabel labelServidor;
    private javax.swing.JLabel labelServidor1;
    private javax.swing.JLabel labelUsername;
    private javax.swing.JLabel labelUsername1;
    private javax.swing.JLabel labelUsername2;
    private javax.swing.JList<String> logsList;
    private javax.swing.JTextField portField;
    private javax.swing.JButton refreshFilesButton;
    private javax.swing.JButton selectFolderButton;
    private javax.swing.JButton sessionButton;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables

}
